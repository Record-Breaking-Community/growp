"""create answer table

Revision ID: 6cdf33607191
Revises: 
Create Date: 2023-06-14 20:39:53.182578

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "6cdf33607191"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("motto", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("password", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("refresh_token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="user_pkey"),
    )
    op.create_table(
        "formation_stage",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('formation_stage_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "description", sa.VARCHAR(length=400), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="formation_stage_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "answer",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("is_forming", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_storming", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_norming", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_performing", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_adjourning", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "formation_stage_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["formation_stage_id"],
            ["formation_stage.id"],
            name="answer_formation_stage_id_fkey",
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name="answer_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="answer_pkey"),
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("answer")
    op.drop_table("formation_stage")
    op.drop_table("user")
    # ### end Alembic commands ###
